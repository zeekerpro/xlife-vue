// Name of the next breakpoint, or null for the last breakpoint
//    >> breakpoint-next(sm)
//    md
//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    md
//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))
//    md
@function breakpoint-next($name, $breakpoints: $breakpoints){
	$names: map-keys($breakpoints);
	$n: index($names, $name);
	@return if($n != null and $n < length($names), nth($names, $n + 1), null);
}

// Minimum breakpoint width, Null for the smallest breakpoint
// 
//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    576px
@function breakpoint-min($name, $breakpoints: $breakpoints){
	$min: map-get($breakpoints, $name);
	@return if($min !=0, $min, null);
}

// Maximum breakpoint width, Null for the largest breakpoint
//
//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    767.98px
@function breakpoint-max($name, $breakpoints: $breakpoints){
	$next: breakpoint-next($name, $breakpoints);
	@return if($next, breakpoint-min($next, $breakpoints) - 0.02, null);
}

// Returns a blank string if smallest breakpoint, 
// otherwise returns the name with a dash in front.
//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    ""
//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    "-sm"
@function breakpoint-infix($name, $breakpoints: $breakpoints){
	@return if(breakpoint-min($name, $breakpoints) == null, "", "-#{$name}");
}
